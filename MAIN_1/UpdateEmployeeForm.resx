<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>